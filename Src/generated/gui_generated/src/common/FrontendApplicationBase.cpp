/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include<platform/driver/lcd/LCD24bpp.hpp>
#include <gui/main_screen_screen/main_screenView.hpp>
#include <gui/main_screen_screen/main_screenPresenter.hpp>
#include <gui/codectestscreen_screen/codecTestScreenView.hpp>
#include <gui/codectestscreen_screen/codecTestScreenPresenter.hpp>
#include <gui/testfatfs_screen_screen/testFatFS_screenView.hpp>
#include <gui/testfatfs_screen_screen/testFatFS_screenPresenter.hpp>
#include <gui/playaudiofile_screen/playAudioFileView.hpp>
#include <gui/playaudiofile_screen/playAudioFilePresenter.hpp>
#include <gui/soundrecord_screen/soundRecordView.hpp>
#include <gui/soundrecord_screen/soundRecordPresenter.hpp>
#include <gui/oscilloscope_screen/oscilloscopeView.hpp>
#include <gui/oscilloscope_screen/oscilloscopePresenter.hpp>
#include <gui/externalstimulator_screen/externalStimulatorView.hpp>
#include <gui/externalstimulator_screen/externalStimulatorPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
}

/*
 * Screen Transition Declarations
 */

// main_screen

void FrontendApplicationBase::gotomain_screenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotomain_screenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotomain_screenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<main_screenView, main_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// codecTestScreen

void FrontendApplicationBase::gotocodecTestScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotocodecTestScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotocodecTestScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<codecTestScreenView, codecTestScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// testFatFS_screen

void FrontendApplicationBase::gototestFatFS_screenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gototestFatFS_screenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gototestFatFS_screenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<testFatFS_screenView, testFatFS_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// playAudioFile

void FrontendApplicationBase::gotoplayAudioFileScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoplayAudioFileScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoplayAudioFileScreenNoTransitionImpl()
{
    touchgfx::makeTransition<playAudioFileView, playAudioFilePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// soundRecord

void FrontendApplicationBase::gotosoundRecordScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotosoundRecordScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotosoundRecordScreenNoTransitionImpl()
{
    touchgfx::makeTransition<soundRecordView, soundRecordPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// oscilloscope

void FrontendApplicationBase::gotooscilloscopeScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotooscilloscopeScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotooscilloscopeScreenNoTransitionImpl()
{
    touchgfx::makeTransition<oscilloscopeView, oscilloscopePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// externalStimulator

void FrontendApplicationBase::gotoexternalStimulatorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoexternalStimulatorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoexternalStimulatorScreenNoTransitionImpl()
{
    touchgfx::makeTransition<externalStimulatorView, externalStimulatorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
