/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CODECTESTSCREENVIEWBASE_HPP
#define CODECTESTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/codectestscreen_screen/codecTestScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <gui/containers/numPicker.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>

class codecTestScreenViewBase : public touchgfx::View<codecTestScreenPresenter>
{
public:
    codecTestScreenViewBase();
    virtual ~codecTestScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void volumeLeftSB_valueChanged(int value)
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void volumeRightSB_valueChanged(int value)
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void codecTestControlBtnPressed()
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void backButtonPressed()
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void carryFreqNumPickerValueChange(uint8_t value)
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void modFreqNumPickerValueChanged(uint8_t value)
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void deviationNumPickerValueChanged(uint8_t value)
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void sineTestRBSelected()
    {
        // Override and implement this function in codecTestScreen
    }

    virtual void pcmTestRBSelected()
    {
        // Override and implement this function in codecTestScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box backgroundBox;
    touchgfx::ButtonWithLabel testControlBtn;
    touchgfx::Slider volumeLeftSB;
    touchgfx::Slider volumeRightSB;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::ButtonWithLabel backButton;
    touchgfx::RadioButton sineTestRadioButton;
    touchgfx::TextArea textArea4;
    touchgfx::RadioButton pcmTestRadioButton;
    touchgfx::TextArea textArea5;
    numPicker carryFreqNumPicker;
    numPicker modFreqNumPicker;
    numPicker deviationNumPicker;
    touchgfx::TextArea textArea6;
    touchgfx::TextArea textArea7;
    touchgfx::TextArea textArea8;
    touchgfx::RadioButtonGroup<2> radioButtonGroup1;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<codecTestScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<codecTestScreenViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;
    touchgfx::Callback<codecTestScreenViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;
    touchgfx::Callback<codecTestScreenViewBase, uint8_t> carryFreqNumPickerPickerValueChangedCallback;
    touchgfx::Callback<codecTestScreenViewBase, uint8_t> modFreqNumPickerPickerValueChangedCallback;
    touchgfx::Callback<codecTestScreenViewBase, uint8_t> deviationNumPickerPickerValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);
    void carryFreqNumPickerPickerValueChangedCallbackHandler(uint8_t value);
    void modFreqNumPickerPickerValueChangedCallbackHandler(uint8_t value);
    void deviationNumPickerPickerValueChangedCallbackHandler(uint8_t value);

};

#endif // CODECTESTSCREENVIEWBASE_HPP
