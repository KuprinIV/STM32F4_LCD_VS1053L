/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TESTFATFS_SCREENVIEWBASE_HPP
#define TESTFATFS_SCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/testfatfs_screen_screen/testFatFS_screenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class testFatFS_screenViewBase : public touchgfx::View<testFatFS_screenPresenter>
{
public:
    testFatFS_screenViewBase();
    virtual ~testFatFS_screenViewBase() {}
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void backButtonFSPressed()
    {
        // Override and implement this function in testFatFS_screen
    }

    virtual void startTestFatFS()
    {
        // Override and implement this function in testFatFS_screen
    }

    virtual void closeModalWindow()
    {
        // Override and implement this function in testFatFS_screen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Box box2;
    touchgfx::ButtonWithLabel backButtonFatFS;
    touchgfx::ScrollableContainer fileListScrollContainer;
    touchgfx::ModalWindow modalWindow;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > closeModalWndButton;
    touchgfx::TextAreaWithOneWildcard modalWindowMessageText;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MODALWINDOWMESSAGETEXT_SIZE = 20;
    touchgfx::Unicode::UnicodeChar modalWindowMessageTextBuffer[MODALWINDOWMESSAGETEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<testFatFS_screenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<testFatFS_screenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // TESTFATFS_SCREENVIEWBASE_HPP
